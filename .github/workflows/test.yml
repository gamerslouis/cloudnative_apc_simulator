# ID: 0716235
# Author: Yu Lun Hsu
# Description:
#   - Unit test
#   I use https://github.com/nektos/act to test this action file locally.
#   Notice that testing stage needs to use node version >= 12,
#   since the globalThis does not support in lower version.
#
#   - Dockerize
#   I use https://github.com/docker/build-push-action
#   to build and push this app to docker hub which owns by WaterSo.
#   
#   - CommitHelm
#   I use https://github.com/cpina/github-action-push-to-another-repository
#   to trigger copy job to another repository for helm chart
name: TSMCxNYCU CI

on:
  push:
    branches:
      - "main"
      - "dev"
  pull_request:
    branches:
      - "main"
      - "dev"
jobs:
  UnitTest:
    name: UnitTest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # jest testing only allows node version >= 12
        # or it will cause an `ReferenceError: globalThis is not defined`
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm test
      - run: cat coverage/coverage-summary.json
      - name: get coverage
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/dev' }} 
        id: coverage
        uses: notiz-dev/github-action-json-property@release
        with: 
            path: 'coverage/coverage-summary.json'
            prop_path: 'total.statements.pct'
      - name: Create coverage Badge
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/dev' }} 
        uses: schneegans/dynamic-badges-action@master
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: de5d1904df014ea44b2832ad03f92e84
          filename: dev.coverage.json
          label: Coverage (dev)
          message: ${{ steps.coverage.outputs.prop }}
          valColorRange: ${{ steps.coverage.outputs.prop }}
          maxColorRange: 100
          minColorRange: 0

  Dockerize:
    name: Publish Docker
    runs-on: ubuntu-latest
    needs: [UnitTest]
    #  Only trigger deployment as running on the main branch
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Notice that we should use docker-hub repo name as tags, but not github repo
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: waterso/tsmc-1:latest
  CommitHelm:
    name: Commit to HELM repo
    runs-on: ubuntu-latest
    needs: [UnitTest]
    #  Only trigger deployment as running on the main branch
    if: github.ref == 'refs/heads/main'
    steps:
      # You need to checkout to get the whole directory
      # cpina does not support copying files 
      - uses: actions/checkout@v3
      - uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: "src/"
          target-directory: "src/"
          target-branch: "main"
          destination-github-username: "gamerslouis"
          destination-repository-name: "cloudnative_helm_charts"
          user-email: alan890104@gmail.com

